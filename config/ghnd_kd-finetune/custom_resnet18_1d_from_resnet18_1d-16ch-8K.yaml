misc:
  snrs: &snrs [-16, -18, -20]

datasets:
  radioml2018:
    name: &dataset_name 'radioml2018'
    # type: 'ImageFolder'
    # root: &root_dir !join ['~/dataset/', *dataset_name]
    splits:
      train:
        dataset_id: &radioml_train !join [*dataset_name, '/train']
        params:
          # root: !join [*root_dir, '/train']
          # transform_params:
          #   - type: 'RandomResizedCrop'
          #     params:
          #       size: &input_size [224, 224]
          #   - type: 'RandomHorizontalFlip'
          #     params:
          #       p: 0.5
          #   - &totensor
          #     type: 'ToTensor'
          #     params:
          #   - &normalize
          #     type: 'Normalize'
          #     params:
          #       mean: [0.485, 0.456, 0.406]
          #       std: [0.229, 0.224, 0.225]
      val:
        dataset_id: &radioml_val !join [*dataset_name, '/val']
        params:
          # root: !join [*root_dir, '/val']
          # transform_params:
          #   - type: 'Resize'
          #     params:
          #       size: 256
          #   - type: 'CenterCrop'
          #     params:
          #       size: *input_size
          #   - *totensor
          #   - *normalize

models:
  teacher_model:
    name: &teacher_model_name 'resnet18_1d'
    params:
      num_classes: 24
      # pretrained: False
    experiment: &teacher_experiment !join ['radioml', '-', *teacher_model_name]
    root: &model_root_dir !join ['/home/mohammad/research/dynamic-nn/repo/', 'SNR-Adaptive-Bottlefit/']
    ckpt: !join [*model_root_dir, 'resource/ckpt/', 'model_', *snrs, '_state', '.pt']
  student_model:
    name: &student_model_name 'custom_resnet18_1d'
    params:
      bottleneck_channel: &bottleneck_ch 16
      bottleneck_idx: 7
      compressor:
      decompressor:
      num_classes: 24
      # pretrained: False
    experiment: &student_experiment !join ['radioml', '-', *student_model_name, '_from_', *teacher_model_name]
    ckpt: !join [*model_root_dir, 'resource/ckpt/', 'model_', *snrs, '_state-', *bottleneck_ch, 'ch.pt']

train:
  log_freq: 10
  stage1:
    num_epochs: 100
    train_data_loader:
      dataset_id: *radioml_train
      random_sample: True
      batch_size: 1024
      num_workers: 16
      cache_output:
    val_data_loader:
      dataset_id: *radioml_val
      random_sample: False
      batch_size: 1024
      num_workers: 16
    teacher: &teacher_config
      sequential: ['conv1', 'bn1', 'relu', 'maxpool', 'layer1', 'layer2', 'layer3', 'layer4']
      frozen_modules: []
      forward_hook:
        input: []
        output: ['layer2', 'layer3', 'layer4']
      wrapper:
      requires_grad: False
    student:
      adaptations:
      sequential: ['bottleneck', 'layer3', 'layer4']
      frozen_modules: ['layer3', 'layer4']
      forward_hook:
        input: []
        output: ['bottleneck', 'layer3', 'layer4']
      wrapper: 'DistributedDataParallel'
      requires_grad: True
    apex:
      requires: False
      opt_level: '01'
    optimizer:
      type: 'Adam'
      params:
        lr: 0.001
    scheduler: &scheduler_config
      type: 'MultiStepLR'
      params:
        milestones: [40, 60]
        gamma: 0.1
    criterion: &criterion_config
      type: 'GeneralizedCustomLoss'
      org_term:
        factor: 0.0
      sub_terms:
        layer2:
          criterion:
            type: 'MSELoss'
            params:
              reduction: 'sum'
          params:
            input:
              is_from_teacher: False
              module_path: 'bottleneck'
              io: 'output'
            target:
              is_from_teacher: True
              module_path: 'layer2'
              io: 'output'
          factor: 1.0
        layer3:
          criterion:
            type: 'MSELoss'
            params:
              reduction: 'sum'
          params:
            input:
              is_from_teacher: False
              module_path: 'layer3'
              io: 'output'
            target:
              is_from_teacher: True
              module_path: 'layer3'
              io: 'output'
          factor: 1.0
        layer4:
          criterion:
            type: 'MSELoss'
            params:
              reduction: 'sum'
          params:
            input:
              is_from_teacher: False
              module_path: 'layer4'
              io: 'output'
            target:
              is_from_teacher: True
              module_path: 'layer4'
              io: 'output'
          factor: 1.0
  stage2:
    num_epochs: 100
    teacher:
      sequential: []
      forward_hook:
        input: []
        output: []
      wrapper:
      requires_grad: False
    student:
      adaptations:
      sequential: []
      frozen_modules: ['bottleneck.encoder']
      forward_hook:
        input: []
        output: []
      wrapper: 'DistributedDataParallel'
      requires_grad: True
    apex:
      requires: False
      opt_level: '01'
    optimizer:
      type: 'Adam'
      params:
        lr: 0.001
    scheduler:
      type: 'MultiStepLR'
      params:
        milestones: [40, 60]
        gamma: 0.1
    criterion:
      type: 'GeneralizedCustomLoss'
      org_term:
        criterion:
          type: 'KDLoss'
          params:
            temperature: 1.0
            alpha: 0.5
            reduction: 'batchmean'
        factor: 1.0
      sub_terms:

test:
  test_data_loader:
    dataset_id: *radioml_val
    random_sample: False
    batch_size: 1024
    num_workers: 16
